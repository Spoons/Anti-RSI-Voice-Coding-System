from dragonfly import *

class maps:
    release = Key("shift:up, ctrl:up")
    key_action_map = {
            # Spoken-form    ->    ->    ->     Action object
            "up [<n>]":                         Key("up/5:%(n)d"),
            "down [<n>]":                       Key("down/5:%(n)d"),
            "left [<n>]":                       Key("left/5:%(n)d"),
            "right [<n>]":                      Key("right/5:%(n)d"),
            "page up [<n>]":                    Key("pgup/5:%(n)d"),
            "page down [<n>]":                  Key("pgdown/5:%(n)d"),
            "up <n> (page | pages)":            Key("pgup/5:%(n)d"),
            "down <n> (page | pages)":          Key("pgdown/5:%(n)d"),
            "left <n> (word | words)":          Key("c-left/5:%(n)d"),
            "right <n> (word | words)":         Key("c-right/5:%(n)d"),
            "left word":                        Key("c-left/5"),
            "right word":                       Key("c-right/5"),
            "top":                              Key("home"),
            "pown":                             Key("end"),
            "doc home":                         Key("c-home"),
            "doc end":                          Key("c-end"),

            #"space [<n>]":                      release + Key("space:%(n)d"),
            "enter [<n>]":                      release + Key("enter:%(n)d"),
            "cancel|escape":                    release + Key("escape"),
            #"edit text": utils.RunApp("notepad"),

            "crack [<n>]":                      release + Key("del:%(n)d"),
            "delete [<n> | this] (line|lines)": release + Key("home, s-down/5:%(n)d, del"),
            "snap [<n>]":                       release + Key("backspace/5:%(n)d"),
            "pop up":                           release + Key("apps"),

            "paste":                            release + Key("c-v"),
            "duplicate <n>":                    release + Key("c-c, c-v:%(n)d"),
            "copy":                             release + Key("c-c"),
            "cut":                              release + Key("c-x"),
            "select all":                       release + Key("c-a"),

            "[hold] shift":                     Key("shift:down"),
            "release shift":                    Key("shift:up"),
            "[hold] control":                   Key("ctrl:down"),
            "release control":                  Key("ctrl:up"),
            "release [all]":                    release,

            "say <text>":                       release + Text("%(text)s"),
            "mimic <text>":                     release + Mimic(extra="text"),

            "slap [<n>]": Key("enter/5:%(n)d"),
            "spooce [<n>]": Key("space/5:%(n)d"),
            "tab [<n>]": Key("tab/5:%(n)d"),

            }
    character_action_map = {
            "plain <chars>": Text("%(chars)s"),
            "numbers <numerals>": Text("%(numerals)s"),
            "print <letters>": Text("%(letters)s"),
            "shout <letters>": Function(lambda letters: Text(letters.upper()).execute()),
            }

    symbol_map = {
        "plus": " + ",
        "dub plus": "++",
        "minus": " - ",
        "nad": ", ",
        "coal": ":",
        "equals": " = ",
        "dub equals": " == ",
        "not equals": " != ",
        "increment by": " += ",
        "greater than": " > ",
        "less than": " < ",
        "greater equals": " >= ",
        "less equals": " <= ",
        "dot": ".",
        "leap": "(",
        "reap": ")",
        "lake": "{",
        "rake": "}",
        "lobe": "[",
        "robe": "]",
        "luke": "<",
        "dub luke": " << ",
        "ruke": ">",
        "quote": "\"",
        "dash": "-",
        "semi": ";",
        "bang": "!",
        "percent": "%",
        "star": "*",
        "backslash": "\\",
        "slash": "/",
        "tilde": "~",
        "underscore": "_",
        "sick quote": "'",
        "dollar": "$",
        "carrot": "^",
        "arrow": "->",
        "fat arrow": "=>",
        "dub coal": "::",
        "amper": "&",
        "dub amper": " && ",
        "pipe": "|",
        "dub pipe": " || ",
        "hash": "#",
        "at symbol": "@",
        "question": "?",
    }

    numbers_map = {
        "zero": "0",
        "one": "1",
        "two": "2",
        "three": "3",
        "four": "4",
        "five": "5",
        "six": "6",
        "seven": "7",
        "eight": "8",
        "nine": "9",
        "point": ".",
        "minus": "-",
        "slash": "/",
        "coal": ":",
        "nad": ",",
    }

    short_letters_map = {
        "A": "a",
        "B": "b",
        "C": "c",
        "D": "d",
        "E": "e",
        "F": "f",
        "G": "g",
        "H": "h",
        "I": "i",
        "J": "j",
        "K": "k",
        "L": "l",
        "M": "m",
        "N": "n",
        "O": "o",
        "P": "p",
        "Q": "q",
        "R": "r",
        "S": "s",
        "T": "t",
        "U": "u",
        "V": "v",
        "W": "w",
        "X": "x",
        "Y": "y",
        "Z": "z",
    }

    quick_letters_map = {
        "arch": "a",
        "brov": "b",
        "chair": "c",
        "dell": "d",
        "etch": "e",
        "fomp": "f",
        "goof": "g",
        "hark": "h",
        "ice": "i",
        "jinks": "j",
        "koop": "k",
        "lug": "l",
        "mowsh": "m",
        "nerb": "n",
        "ork": "o",
        "pooch": "p",
        "quash": "q",
        "rosh": "r",
        "souk": "s",
        "teek": "t",
        "unks": "u",
        "verge": "v",
        "womp": "w",
        "trex": "x",
        "yang": "y",
        "zooch": "z",
    }

    long_letters_map = {
        "alpha": "a",
        "bravo": "b",
        "charlie": "c",
        "delta": "d",
        "echo": "e",
        "foxtrot": "f",
        "golf": "g",
        "hotel": "h",
        "india": "i",
        "juliet": "j",
        "kilo": "k",
        "lima": "l",
        "mike": "m",
        "november": "n",
        "oscar": "o",
        "poppa": "p",
        "quebec": "q",
        "romeo": "r",
        "sierra": "s",
        "tango": "t",
        "uniform": "u",
        "victor": "v",
        "whiskey": "w",
        "x-ray": "x",
        "yankee": "y",
        "zulu": "z",
        "dot": ".",
    }

    prefixes = [
        "num",
        "min",
    ]

    suffixes = [
        "bytes",
    ]

